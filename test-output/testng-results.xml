<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="4" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-12-17T18:16:57 IST" name="BatteryBankAPI" finished-at="2019-12-17T18:17:04 IST" duration-ms="6896">
    <groups>
    </groups>
    <test started-at="2019-12-17T18:16:57 IST" name="BatteryBankAPI" finished-at="2019-12-17T18:17:04 IST" duration-ms="6896">
      <class name="com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee">
        <test-method is-config="true" signature="setupBaseUrl()[pri:0, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:16:56 IST" name="setupBaseUrl" finished-at="2019-12-17T18:16:57 IST" duration-ms="540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupBaseUrl -->
        <test-method is-config="true" signature="startReport()[pri:0, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:16:57 IST" name="startReport" finished-at="2019-12-17T18:16:57 IST" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method is-config="true" signature="testLogger(java.lang.reflect.Method)[pri:0, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:16:57 IST" name="testLogger" finished-at="2019-12-17T18:16:57 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee.postEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogger -->
        <test-method signature="postEmployee()[pri:0, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:16:57 IST" name="postEmployee" finished-at="2019-12-17T18:17:00 IST" duration-ms="3545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postEmployee -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:17:00 IST" name="getResult" finished-at="2019-12-17T18:17:00 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=postEmployee status=SUCCESS method=CreateEmployee.postEmployee()[pri:0, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testLogger(java.lang.reflect.Method)[pri:0, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:17:00 IST" name="testLogger" finished-at="2019-12-17T18:17:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee.postEmployeeWithDupRecord()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogger -->
        <test-method signature="postEmployeeWithDupRecord()[pri:1, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:17:00 IST" name="postEmployeeWithDupRecord" finished-at="2019-12-17T18:17:01 IST" duration-ms="999" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postEmployeeWithDupRecord -->
        <test-method is-config="true" signature="testLogger(java.lang.reflect.Method)[pri:0, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:17:01 IST" name="testLogger" finished-at="2019-12-17T18:17:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee.getEmployeeDetailsByValidId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogger -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:17:01 IST" name="getResult" finished-at="2019-12-17T18:17:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=postEmployeeWithDupRecord status=SUCCESS method=CreateEmployee.postEmployeeWithDupRecord()[pri:1, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="getEmployeeDetailsByValidId()[pri:2, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:17:01 IST" name="getEmployeeDetailsByValidId" finished-at="2019-12-17T18:17:02 IST" duration-ms="927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmployeeDetailsByValidId -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:17:02 IST" name="getResult" finished-at="2019-12-17T18:17:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getEmployeeDetailsByValidId status=SUCCESS method=CreateEmployee.getEmployeeDetailsByValidId()[pri:2, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testLogger(java.lang.reflect.Method)[pri:0, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:17:02 IST" name="testLogger" finished-at="2019-12-17T18:17:02 IST" duration-ms="17" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee.DeleteEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogger -->
        <test-method signature="DeleteEmployee()[pri:3, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:17:02 IST" name="DeleteEmployee" finished-at="2019-12-17T18:17:03 IST" duration-ms="875" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DeleteEmployee -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:17:03 IST" name="getResult" finished-at="2019-12-17T18:17:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DeleteEmployee status=SUCCESS method=CreateEmployee.DeleteEmployee()[pri:3, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:17:03 IST" name="endReport" finished-at="2019-12-17T18:17:04 IST" duration-ms="376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee@7722c3c3]" started-at="2019-12-17T18:17:04 IST" name="afterClass" finished-at="2019-12-17T18:17:04 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.altimetrik.inventoryManagement.mainTestCases.CreateEmployee -->
    </test> <!-- BatteryBankAPI -->
  </suite> <!-- BatteryBankAPI -->
</testng-results>
